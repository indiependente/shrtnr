// Code generated by MockGen. DO NOT EDIT.
// Source: slug.go

// Package service is a generated GoMock package.
package service

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSlugger is a mock of Slugger interface
type MockSlugger struct {
	ctrl     *gomock.Controller
	recorder *MockSluggerMockRecorder
}

// MockSluggerMockRecorder is the mock recorder for MockSlugger
type MockSluggerMockRecorder struct {
	mock *MockSlugger
}

// NewMockSlugger creates a new mock instance
func NewMockSlugger(ctrl *gomock.Controller) *MockSlugger {
	mock := &MockSlugger{ctrl: ctrl}
	mock.recorder = &MockSluggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSlugger) EXPECT() *MockSluggerMockRecorder {
	return m.recorder
}

// Slug mocks base method
func (m *MockSlugger) Slug() string {
	ret := m.ctrl.Call(m, "Slug")
	ret0, _ := ret[0].(string)
	return ret0
}

// Slug indicates an expected call of Slug
func (mr *MockSluggerMockRecorder) Slug() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Slug", reflect.TypeOf((*MockSlugger)(nil).Slug))
}

// Validate mocks base method
func (m *MockSlugger) Validate(arg0 string) bool {
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockSluggerMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockSlugger)(nil).Validate), arg0)
}
