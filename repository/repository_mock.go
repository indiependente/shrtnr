// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/indiependente/shrtnr/models"
	reflect "reflect"
)

// MockStorer is a mock of Storer interface
type MockStorer struct {
	ctrl     *gomock.Controller
	recorder *MockStorerMockRecorder
}

// MockStorerMockRecorder is the mock recorder for MockStorer
type MockStorerMockRecorder struct {
	mock *MockStorer
}

// NewMockStorer creates a new mock instance
func NewMockStorer(ctrl *gomock.Controller) *MockStorer {
	mock := &MockStorer{ctrl: ctrl}
	mock.recorder = &MockStorerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorer) EXPECT() *MockStorerMockRecorder {
	return m.recorder
}

// Add mocks base method
func (m *MockStorer) Add(ctx context.Context, shortened models.URLShortened) error {
	ret := m.ctrl.Call(m, "Add", ctx, shortened)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add
func (mr *MockStorerMockRecorder) Add(ctx, shortened interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockStorer)(nil).Add), ctx, shortened)
}

// Get mocks base method
func (m *MockStorer) Get(ctx context.Context, slug string) (models.URLShortened, error) {
	ret := m.ctrl.Call(m, "Get", ctx, slug)
	ret0, _ := ret[0].(models.URLShortened)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockStorerMockRecorder) Get(ctx, slug interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockStorer)(nil).Get), ctx, slug)
}

// Update mocks base method
func (m *MockStorer) Update(ctx context.Context, newshortened models.URLShortened) error {
	ret := m.ctrl.Call(m, "Update", ctx, newshortened)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockStorerMockRecorder) Update(ctx, newshortened interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockStorer)(nil).Update), ctx, newshortened)
}

// Delete mocks base method
func (m *MockStorer) Delete(ctx context.Context, slug string) error {
	ret := m.ctrl.Call(m, "Delete", ctx, slug)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockStorerMockRecorder) Delete(ctx, slug interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockStorer)(nil).Delete), ctx, slug)
}
